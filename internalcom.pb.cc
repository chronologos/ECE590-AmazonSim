// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: internalcom.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "internalcom.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Order_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Order_reflection_ = NULL;
const ::google::protobuf::Descriptor* OrderReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OrderReply_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_internalcom_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_internalcom_2eproto() {
  protobuf_AddDesc_internalcom_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "internalcom.proto");
  GOOGLE_CHECK(file != NULL);
  Order_descriptor_ = file->message_type(0);
  static const int Order_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, shipid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, whid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, delx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, dely_),
  };
  Order_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Order_descriptor_,
      Order::default_instance_,
      Order_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, _has_bits_[0]),
      -1,
      -1,
      sizeof(Order),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, _internal_metadata_),
      -1);
  OrderReply_descriptor_ = file->message_type(1);
  static const int OrderReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderReply, shipid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderReply, error_),
  };
  OrderReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OrderReply_descriptor_,
      OrderReply::default_instance_,
      OrderReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(OrderReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderReply, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_internalcom_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Order_descriptor_, &Order::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OrderReply_descriptor_, &OrderReply::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_internalcom_2eproto() {
  delete Order::default_instance_;
  delete Order_reflection_;
  delete OrderReply::default_instance_;
  delete OrderReply_reflection_;
}

void protobuf_AddDesc_internalcom_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_internalcom_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021internalcom.proto\"A\n\005Order\022\016\n\006shipid\030\001"
    " \002(\003\022\014\n\004whid\030\002 \002(\005\022\014\n\004delX\030\003 \002(\005\022\014\n\004delY"
    "\030\004 \002(\005\"+\n\nOrderReply\022\016\n\006shipid\030\001 \002(\003\022\r\n\005"
    "error\030\002 \001(\t", 131);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "internalcom.proto", &protobuf_RegisterTypes);
  Order::default_instance_ = new Order();
  OrderReply::default_instance_ = new OrderReply();
  Order::default_instance_->InitAsDefaultInstance();
  OrderReply::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_internalcom_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_internalcom_2eproto {
  StaticDescriptorInitializer_internalcom_2eproto() {
    protobuf_AddDesc_internalcom_2eproto();
  }
} static_descriptor_initializer_internalcom_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Order::kShipidFieldNumber;
const int Order::kWhidFieldNumber;
const int Order::kDelXFieldNumber;
const int Order::kDelYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Order::Order()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Order)
}

void Order::InitAsDefaultInstance() {
}

Order::Order(const Order& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Order)
}

void Order::SharedCtor() {
  _cached_size_ = 0;
  shipid_ = GOOGLE_LONGLONG(0);
  whid_ = 0;
  delx_ = 0;
  dely_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Order::~Order() {
  // @@protoc_insertion_point(destructor:Order)
  SharedDtor();
}

void Order::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Order::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Order::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Order_descriptor_;
}

const Order& Order::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_internalcom_2eproto();
  return *default_instance_;
}

Order* Order::default_instance_ = NULL;

Order* Order::New(::google::protobuf::Arena* arena) const {
  Order* n = new Order;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Order::Clear() {
// @@protoc_insertion_point(message_clear_start:Order)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Order, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Order*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(shipid_, dely_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Order::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Order)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 shipid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shipid_)));
          set_has_shipid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_whid;
        break;
      }

      // required int32 whid = 2;
      case 2: {
        if (tag == 16) {
         parse_whid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whid_)));
          set_has_whid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_delX;
        break;
      }

      // required int32 delX = 3;
      case 3: {
        if (tag == 24) {
         parse_delX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delx_)));
          set_has_delx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_delY;
        break;
      }

      // required int32 delY = 4;
      case 4: {
        if (tag == 32) {
         parse_delY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dely_)));
          set_has_dely();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Order)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Order)
  return false;
#undef DO_
}

void Order::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Order)
  // required int64 shipid = 1;
  if (has_shipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->shipid(), output);
  }

  // required int32 whid = 2;
  if (has_whid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->whid(), output);
  }

  // required int32 delX = 3;
  if (has_delx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->delx(), output);
  }

  // required int32 delY = 4;
  if (has_dely()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->dely(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Order)
}

::google::protobuf::uint8* Order::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Order)
  // required int64 shipid = 1;
  if (has_shipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->shipid(), target);
  }

  // required int32 whid = 2;
  if (has_whid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->whid(), target);
  }

  // required int32 delX = 3;
  if (has_delx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->delx(), target);
  }

  // required int32 delY = 4;
  if (has_dely()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->dely(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Order)
  return target;
}

int Order::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Order)
  int total_size = 0;

  if (has_shipid()) {
    // required int64 shipid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());
  }

  if (has_whid()) {
    // required int32 whid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());
  }

  if (has_delx()) {
    // required int32 delX = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->delx());
  }

  if (has_dely()) {
    // required int32 delY = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dely());
  }

  return total_size;
}
int Order::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Order)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int64 shipid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());

    // required int32 whid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());

    // required int32 delX = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->delx());

    // required int32 delY = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dely());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Order::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Order)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Order* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Order>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Order)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Order)
    MergeFrom(*source);
  }
}

void Order::MergeFrom(const Order& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Order)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shipid()) {
      set_shipid(from.shipid());
    }
    if (from.has_whid()) {
      set_whid(from.whid());
    }
    if (from.has_delx()) {
      set_delx(from.delx());
    }
    if (from.has_dely()) {
      set_dely(from.dely());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Order::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Order::CopyFrom(const Order& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Order::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void Order::Swap(Order* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Order::InternalSwap(Order* other) {
  std::swap(shipid_, other->shipid_);
  std::swap(whid_, other->whid_);
  std::swap(delx_, other->delx_);
  std::swap(dely_, other->dely_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Order::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Order_descriptor_;
  metadata.reflection = Order_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Order

// required int64 shipid = 1;
bool Order::has_shipid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Order::set_has_shipid() {
  _has_bits_[0] |= 0x00000001u;
}
void Order::clear_has_shipid() {
  _has_bits_[0] &= ~0x00000001u;
}
void Order::clear_shipid() {
  shipid_ = GOOGLE_LONGLONG(0);
  clear_has_shipid();
}
 ::google::protobuf::int64 Order::shipid() const {
  // @@protoc_insertion_point(field_get:Order.shipid)
  return shipid_;
}
 void Order::set_shipid(::google::protobuf::int64 value) {
  set_has_shipid();
  shipid_ = value;
  // @@protoc_insertion_point(field_set:Order.shipid)
}

// required int32 whid = 2;
bool Order::has_whid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Order::set_has_whid() {
  _has_bits_[0] |= 0x00000002u;
}
void Order::clear_has_whid() {
  _has_bits_[0] &= ~0x00000002u;
}
void Order::clear_whid() {
  whid_ = 0;
  clear_has_whid();
}
 ::google::protobuf::int32 Order::whid() const {
  // @@protoc_insertion_point(field_get:Order.whid)
  return whid_;
}
 void Order::set_whid(::google::protobuf::int32 value) {
  set_has_whid();
  whid_ = value;
  // @@protoc_insertion_point(field_set:Order.whid)
}

// required int32 delX = 3;
bool Order::has_delx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Order::set_has_delx() {
  _has_bits_[0] |= 0x00000004u;
}
void Order::clear_has_delx() {
  _has_bits_[0] &= ~0x00000004u;
}
void Order::clear_delx() {
  delx_ = 0;
  clear_has_delx();
}
 ::google::protobuf::int32 Order::delx() const {
  // @@protoc_insertion_point(field_get:Order.delX)
  return delx_;
}
 void Order::set_delx(::google::protobuf::int32 value) {
  set_has_delx();
  delx_ = value;
  // @@protoc_insertion_point(field_set:Order.delX)
}

// required int32 delY = 4;
bool Order::has_dely() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Order::set_has_dely() {
  _has_bits_[0] |= 0x00000008u;
}
void Order::clear_has_dely() {
  _has_bits_[0] &= ~0x00000008u;
}
void Order::clear_dely() {
  dely_ = 0;
  clear_has_dely();
}
 ::google::protobuf::int32 Order::dely() const {
  // @@protoc_insertion_point(field_get:Order.delY)
  return dely_;
}
 void Order::set_dely(::google::protobuf::int32 value) {
  set_has_dely();
  dely_ = value;
  // @@protoc_insertion_point(field_set:Order.delY)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderReply::kShipidFieldNumber;
const int OrderReply::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderReply::OrderReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrderReply)
}

void OrderReply::InitAsDefaultInstance() {
}

OrderReply::OrderReply(const OrderReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OrderReply)
}

void OrderReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  shipid_ = GOOGLE_LONGLONG(0);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OrderReply::~OrderReply() {
  // @@protoc_insertion_point(destructor:OrderReply)
  SharedDtor();
}

void OrderReply::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void OrderReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrderReply_descriptor_;
}

const OrderReply& OrderReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_internalcom_2eproto();
  return *default_instance_;
}

OrderReply* OrderReply::default_instance_ = NULL;

OrderReply* OrderReply::New(::google::protobuf::Arena* arena) const {
  OrderReply* n = new OrderReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OrderReply::Clear() {
// @@protoc_insertion_point(message_clear_start:OrderReply)
  if (_has_bits_[0 / 32] & 3u) {
    shipid_ = GOOGLE_LONGLONG(0);
    if (has_error()) {
      error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool OrderReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrderReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 shipid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shipid_)));
          set_has_shipid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_error;
        break;
      }

      // optional string error = 2;
      case 2: {
        if (tag == 18) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OrderReply.error");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrderReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrderReply)
  return false;
#undef DO_
}

void OrderReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrderReply)
  // required int64 shipid = 1;
  if (has_shipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->shipid(), output);
  }

  // optional string error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OrderReply.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OrderReply)
}

::google::protobuf::uint8* OrderReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OrderReply)
  // required int64 shipid = 1;
  if (has_shipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->shipid(), target);
  }

  // optional string error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OrderReply.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrderReply)
  return target;
}

int OrderReply::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OrderReply)
  int total_size = 0;

  // required int64 shipid = 1;
  if (has_shipid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());
  }
  // optional string error = 2;
  if (has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrderReply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const OrderReply* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrderReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrderReply)
    MergeFrom(*source);
  }
}

void OrderReply::MergeFrom(const OrderReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrderReply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shipid()) {
      set_shipid(from.shipid());
    }
    if (from.has_error()) {
      set_has_error();
      error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void OrderReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrderReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderReply::CopyFrom(const OrderReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrderReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void OrderReply::Swap(OrderReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderReply::InternalSwap(OrderReply* other) {
  std::swap(shipid_, other->shipid_);
  error_.Swap(&other->error_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OrderReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OrderReply_descriptor_;
  metadata.reflection = OrderReply_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OrderReply

// required int64 shipid = 1;
bool OrderReply::has_shipid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OrderReply::set_has_shipid() {
  _has_bits_[0] |= 0x00000001u;
}
void OrderReply::clear_has_shipid() {
  _has_bits_[0] &= ~0x00000001u;
}
void OrderReply::clear_shipid() {
  shipid_ = GOOGLE_LONGLONG(0);
  clear_has_shipid();
}
 ::google::protobuf::int64 OrderReply::shipid() const {
  // @@protoc_insertion_point(field_get:OrderReply.shipid)
  return shipid_;
}
 void OrderReply::set_shipid(::google::protobuf::int64 value) {
  set_has_shipid();
  shipid_ = value;
  // @@protoc_insertion_point(field_set:OrderReply.shipid)
}

// optional string error = 2;
bool OrderReply::has_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OrderReply::set_has_error() {
  _has_bits_[0] |= 0x00000002u;
}
void OrderReply::clear_has_error() {
  _has_bits_[0] &= ~0x00000002u;
}
void OrderReply::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error();
}
 const ::std::string& OrderReply::error() const {
  // @@protoc_insertion_point(field_get:OrderReply.error)
  return error_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OrderReply::set_error(const ::std::string& value) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OrderReply.error)
}
 void OrderReply::set_error(const char* value) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OrderReply.error)
}
 void OrderReply::set_error(const char* value, size_t size) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OrderReply.error)
}
 ::std::string* OrderReply::mutable_error() {
  set_has_error();
  // @@protoc_insertion_point(field_mutable:OrderReply.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OrderReply::release_error() {
  // @@protoc_insertion_point(field_release:OrderReply.error)
  clear_has_error();
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OrderReply::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    set_has_error();
  } else {
    clear_has_error();
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:OrderReply.error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
